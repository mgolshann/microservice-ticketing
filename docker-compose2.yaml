version: '3.1'
services:

  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 8081:80
    volumes:
      - ./api-gateway/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth
      - client
      - tickets

  client:
    container_name: client
    image: mgolshann/client
    build:
      context: client
      dockerfile: ../client.Dockerfile
    environment:
      - PORT=3000
      - SERVER_URL=http://nginx
      - BROWSER_URL=/

  auth:
    container_name: auth
    image: mgolshann/auth
    build:
      context: auth
      dockerfile: ../auth.Dockerfile
    environment:
      - PORT=80
      - NODE_ENV=test
      - JWT_TOKEN=asdf
      - COOKIE_SESSION_SECRET=mohammadgolshan
      - MONGO_URI=mongo_auth:27017/auth
      - ORIGIN=http://nginx
    depends_on:
      - mongo_auth

  tickets:
    container_name: tickets
    image: mgolshann/tickets
    build:
      context: tickets
      dockerfile: ../tickets.Dockerfile
    environment:
      - PORT=80
      - NODE_ENV=test
      - JWT_TOKEN=asdf
      - COOKIE_SESSION_SECRET=mohammadgolshan
      - MONGO_URI=mongo_ticket:27017/tickets
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CLIENT_ID=ticketing
      - ORIGIN=http://nginx
    depends_on:
      - zookeeper
      - kafka
      - mongo_ticket

  mongo_auth:
    container_name: mongo_auth
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo/auth:/data/db

  mongo_ticket:
    container_name: mongo_ticket
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - ./data/mongo/ticket:/data/db

#   mongo_order:
#     container_name: mongo_order
#     image: mongo
#     ports:
#       - 27019:27017
#     volumes:
#       - ./data/mongo/order:/data/db

#   mongo_payment:
#     container_name: mongo_payment
#     image: mongo
#     ports:
#       - 27020:27017
#     volumes:
#       - ./data/mongo/payment:/data/db

#   redis:
#     container_name: redis
#     image: redis
#     ports:
#       - 6379:6379
#     volumes:
#       - ./data/nginx:/usr/share/nginx/html/

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_AUTH_PROVIDER_1: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
  
  kafka:
    image: confluentinc/cp-server:5.4.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'